// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import frc.robot.Constants.PowerConstants;
import frc.robot.Constants.ShooterMotorConstants;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

public class BallIntake extends SubsystemBase {
    // Hardware
    private WPI_VictorSPX intakeVictor;

    public BallIntake() {
        intakeVictor = new WPI_VictorSPX(ShooterMotorConstants.kIntakeMotorCanID);
        intakeVictor.setInverted(false);
        addChild("Intake VictorSPX", intakeVictor);
    }

    @Override
    public void periodic() {

    }

    @Override
    public void simulationPeriodic() {
    }

    /**
     * Method to intake a ball to the clocking mechanism
     * 
     * This will be used in conjunction with the clocking mechanism
     */
    public void intakeBall() {
        intakeVictor.set(ControlMode.PercentOutput, PowerConstants.intakePowerLimit);
    }

    /**
     * Method to reject a ball from the clocking mechanism
     * 
     * This will be used in conjunction with the clocking mechanism
     */
    public void rejectBall() {
        intakeVictor.set(ControlMode.PercentOutput, -PowerConstants.intakePowerLimit);
    }

    /**
     * Method to stop the intake motor
     */
    public void stopIntake() {
        intakeVictor.stopMotor();
    }
}
