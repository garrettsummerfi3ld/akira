// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants.ElevatorMotorConstants;
import frc.robot.Constants.PowerConstants;
import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

public class Winch extends SubsystemBase {
    // Hardware
    private WPI_VictorSPX winchVictor;

    public Winch() {
        winchVictor = new WPI_VictorSPX(ElevatorMotorConstants.kWinchMotorCanID);
        winchVictor.setInverted(false);
    }

    @Override
    public void periodic() {

    }

    @Override
    public void simulationPeriodic() {

    }

    /**
     * Method to winch the robot up
     * 
     * This will be used in conjunction with the tilting mechanism (Eileen)
     */
    public void winchUp() {
        winchVictor.set(ControlMode.PercentOutput, PowerConstants.kWinchPowerLimit);
    }

    /**
     * Method to winch the robot down
     * 
     * This will be used in conjunction with the tilting mechanism (Eileen)
     */
    public void winchDown() {
        winchVictor.set(ControlMode.PercentOutput, -PowerConstants.kWinchPowerLimit);
    }

    /**
     * Method to stop the winch in its position
     * 
     * This will not keep it in its position, rather stop all power going to the
     * power
     */
    public void winchStop() {
        winchVictor.stopMotor();
    }
}
